name: Build and Upload JAR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Run Clean
        run: ./gradlew clean

      - name: Build with Gradle
        run: ./gradlew bootJar

      - name: Get JAR file name
        id: jar-name
        run: |
          JAR_FILE=$(find build/libs -name "*.jar" -type f | head -n 1)
          JAR_NAME=$(basename "$JAR_FILE")
          
          echo "Found JAR file: $JAR_FILE"
          echo "JAR name: $JAR_NAME"

      - name: Upload JAR to server
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          HOST: ${{ secrets.HOST }}
          USER: ${{ secrets.USER }}
          JAR_FILE: ${{ steps.jar-name.outputs.JAR_FILE }}
          JAR_NAME: ${{ steps.jar-name.outputs.JAR_NAME }}
        run: |
          # SSH 키 설정
          echo "$PRIVATE_KEY" > private_key
          chmod 600 private_key
          
          JAR_FILE=""
          
          # 방법 1: 일반적인 패턴
          if [ -z "$JAR_FILE" ]; then
            JAR_FILE=$(find build/libs -name "*.jar" -not -name "*-plain.jar" -type f | head -n 1)
          fi
          
          JAR_NAME=$(basename "$JAR_FILE")
          
          echo "Found JAR file: $JAR_FILE"
          echo "JAR name: $JAR_NAME"
          echo "JAR file size: $(ls -lh "$JAR_FILE")"

          # 서버로 JAR 파일 전송
          scp -i private_key -o StrictHostKeyChecking=no "$JAR_FILE" "$USER@$HOST:/app/auto/"
          
          echo "JAR file uploaded successfully to /app/$JAR_NAME"
          
          # 임시 키 파일 삭제
          rm private_key